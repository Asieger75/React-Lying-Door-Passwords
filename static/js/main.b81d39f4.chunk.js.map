{"version":3,"sources":["components/button/index.js","components/body/index.js","App.js","reportWebVitals.js","index.js"],"names":["LoggingButton","handleClick","console","log","passLength","prompt","alert","lower","window","confirm","upper","numerals","specials","password","props","Script","setPassword","onClick","React","Component","Body","className","id","placeholder","aria-label","value","App","useState","Array","lowerArray","upperArray","specialArray","numbArray","i","ranArray","Math","floor","random","lowerSelection","length","upperSelection","specialSelection","numberSelection","join","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAiCiBA,E,4MA3BTC,YAAc,WACVC,QAAQC,IAAI,OAChB,IAAIC,EAAaC,OAAO,0DAExB,GAAID,EAAa,EACfE,MAAM,wBADR,CAKA,IAAIC,EAAQC,OAAOC,QAAQ,4DACvBC,EAAQF,OAAOC,QAAQ,4DACvBE,EAAWH,OAAOC,QAAQ,kDAC1BG,EAAWJ,OAAOC,QAAQ,0DAC1BI,EAAW,EAAKC,MAAMC,OAAOX,EAAYG,EAAOG,EAAOC,EAAUC,GACrE,EAAKE,MAAME,YAAYH,K,4CAI3B,WAAU,IAAD,OACP,OACM,wBAAQI,QAAS,WAAO,EAAKhB,eAA7B,0B,GAtBgBiB,IAAMC,WC6BnBC,MA7Bf,SAAcN,GACV,OACI,8BACI,sBAAKO,UAAU,UAAf,UACI,iCACI,qEAEJ,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,uDAEJ,qBAAKA,UAAU,YAAf,SACI,0BAAUC,GAAG,WAAWC,YAAY,uBAAuBC,aAAW,qBAAqBC,MAAOX,EAAMD,aAE5G,qBAAKQ,UAAU,cAAf,SACG,cAAC,EAAD,CAAgBL,YAAaF,EAAME,YAAaD,OAAQD,EAAMC,oBCqDtEW,MAnEf,WAAgB,IAAD,EAEoBC,mBAAS,IAF7B,mBAENd,EAFM,KAEIG,EAFJ,KAyDb,OACE,8BACE,cAAC,EAAD,CAAOH,SAAUA,EAAUG,YAAaA,EAAcD,OAxD1D,SAAgBX,EAAYG,EAAOG,EAAOC,EAAUC,GAMlD,IALA,IAAIC,EAAW,IAAIe,MAAMxB,GACrByB,EAAa,6BACbC,EAAa,6BACbC,EAAe,kCACfC,EAAY,aACPC,EAAI,EAAGA,EAAI7B,EAAY6B,IAAK,CACnC,IAAIC,EAAWC,KAAKC,MAAsB,EAAhBD,KAAKE,UAG/B,GAAiB,IAAbH,EACF,IAAc,IAAV3B,EAAgB,CAClB,IAAI+B,EAAiBH,KAAKC,MAAMD,KAAKE,SAAWR,EAAWU,QAC3D1B,EAASoB,GAAKJ,EAAWS,QAGzBL,SAGC,GAAiB,IAAbC,EACP,IAAc,IAAVxB,EAAgB,CAClB,IAAI8B,EAAiBL,KAAKC,MAAMD,KAAKE,SAAWP,EAAWS,QAC3D1B,EAASoB,GAAKH,EAAWU,QAGzBP,SAGC,GAAiB,IAAbC,EACP,IAAiB,IAAbtB,EAAmB,CACrB,IAAI6B,EAAmBN,KAAKC,MAAMD,KAAKE,SAAWN,EAAaQ,QAC/D1B,EAASoB,GAAKF,EAAaU,QAG3BR,SAGC,GAAiB,IAAbC,EACP,IAAiB,IAAbvB,EAAmB,CACrB,IAAI+B,EAAkBP,KAAKC,MAAMD,KAAKE,SAAWL,EAAUO,QAC3D1B,EAASoB,GAAKD,EAAUU,QAGxBT,IAKN,OAAOpB,EAAS8B,KAAK,UC5CVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b81d39f4.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nclass LoggingButton extends React.Component {\r\n\r\n        handleClick = () => {\r\n            console.log(\"hit\")\r\n        var passLength = prompt(\"Between 8 to 128 charachters for your password, please\");\r\n        // find a way to write 'if passLength 7< and >129, then run rest of code as long as that fits\r\n        if (passLength < 8) {\r\n          alert(\"please try again\")\r\n          return\r\n        }\r\n          \r\n        var lower = window.confirm(\"Press 'ok' to include lowercase letters in your password\");\r\n        var upper = window.confirm(\"Press 'ok' to include uppercase letters in your password\");\r\n        var numerals = window.confirm(\"Press 'ok' to include numbers in your password\");\r\n        var specials = window.confirm(\"Press 'ok' to include special symbols in your password\");\r\n        var password = this.props.Script(passLength, lower, upper, numerals, specials);\r\n        this.props.setPassword(password);\r\n      \r\n    }\r\n  \r\n    render() {\r\n      return (\r\n            <button onClick={() => {this.handleClick()}}>\r\n          Click me\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default LoggingButton","import React from \"react\";\r\nimport LoggingButton from \"../button\";\r\n\r\n\r\nfunction Body(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"wrapper\">\r\n                <header>\r\n                    <h1>The Lying Door Password Generator</h1>\r\n                </header>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <h2>Generate a Password</h2>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <textarea id=\"password\" placeholder=\"Your Secure Password\" aria-label=\"Generated Password\" value={props.password}  ></textarea>\r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                       <LoggingButton  setPassword={props.setPassword} Script={props.Script}/>\r\n                      \r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Body\r\n","import './App.css';\n// import Script from './script.js';\nimport Body from './components/body/index';\nimport React, { useState } from 'react';\n\nfunction App() {\n  \n  const [password, setPassword] =  useState(\"\")\n  function Script(passLength, lower, upper, numerals, specials) {\n    var password = new Array(passLength);\n    var lowerArray = \"abcdefghijklmnopqrstuvwxyz\";\n    var upperArray = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    var specialArray = \"!#$%&'()*+,-./:;<=>?@[\\\\^_`{|}~\";\n    var numbArray = \"0123456789\";\n    for (var i = 0; i < passLength; i++) {\n      var ranArray = Math.floor(Math.random() * 4);\n\n      // this is where the fun begins // \n      if (ranArray === 0) {\n        if (lower === true) {\n          var lowerSelection = Math.floor(Math.random() * lowerArray.length);\n          password[i] = lowerArray[lowerSelection];\n        }\n        else {\n          i--;\n        }\n      }\n      else if (ranArray === 1) {\n        if (upper === true) {\n          var upperSelection = Math.floor(Math.random() * upperArray.length);\n          password[i] = upperArray[upperSelection];\n        }\n        else {\n          i--;\n        }\n      }\n      else if (ranArray === 2) {\n        if (specials === true) {\n          var specialSelection = Math.floor(Math.random() * specialArray.length);\n          password[i] = specialArray[specialSelection];\n        }\n        else {\n          i--;\n        }\n      }\n      else if (ranArray === 3) {\n        if (numerals === true) {\n          var numberSelection = Math.floor(Math.random() * numbArray.length);\n          password[i] = numbArray[numberSelection];\n        }\n        else {\n          i--;\n        }\n      }\n\n    }\n    return password.join('');\n  }\n\n\n  // Write password to the #password input\n  \n  return (\n    <div>\n      <Body  password={password} setPassword={setPassword}  Script={Script}/>\n      {/* <Script/> */}\n\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}